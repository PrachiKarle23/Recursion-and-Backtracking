class Solution {
public:
    bool isSafe(vector<vector<char>>& board, vector<vector<int>>& vis, string word, 
    int k, int i, int j) {
        int n = board.size();
        int m = board[0].size();
        return (i >= 0 && i < n && j >= 0 && j < m && board[i][j] == word[k]
         && vis[i][j] == 0);
    }

    void solve(vector<vector<char>>& board, string word, int i, int j, 
    vector<vector<int>>& vis, int k, int& flag) {
        if (k == word.size()) {
            flag = 1;
            return;
        }
        if (flag == 1) return;

        vis[i][j] = 1;
        int dx[4] = {0, 0, 1, -1};
        int dy[4] = {1, -1, 0, 0};

        for (int d = 0; d < 4; d++) {
            int x = i + dx[d];
            int y = j + dy[d];
            if (isSafe(board, vis, word, k, x, y)) {
                solve(board, word, x, y, vis, k + 1, flag);
            }
        }
        vis[i][j] = 0;
    }

    bool exist(vector<vector<char>>& board, string word) {
        int n = board.size();
        int m = board[0].size();
        int flag = 0;
        vector<vector<int>> vis(n, vector<int>(m, 0));

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == word[0]) {
                    solve(board, word, i, j, vis, 1, flag);
                }
            }
        }

        return flag == 1;
    }
};
