class Solution {
public:
    void solve(vector<int>& candidates, int target,int i,vector<int>v,vector<vector<int>>& ans,int n)
    {
        if(target==0){
            ans.push_back(v);
            return;
        }

        for(int j=i;j<n;j++){
            if(j>i && candidates[j]==candidates[j-1]){
                continue;
            }
            if(target<candidates[j]){
                break;
            }
            v.push_back(candidates[j]);
            solve(candidates,target-candidates[j],j+1,v,ans,n);
            v.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(),candidates.end());
        int n=candidates.size();
        vector<int>v;
        vector<vector<int>>ans;
        solve(candidates,target,0,v,ans,n);
        return ans;
    }
};
